name: Deploy LegalClarity

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Check for exposed secrets
      run: |
        echo "🔍 Checking for exposed secrets..."
        if grep -r "sk-" . --exclude-dir=.git --exclude-dir=.github; then
          echo "❌ Found potential OpenAI API key!"
          exit 1
        fi
        if grep -r "your-.*-key" . --exclude-dir=.git --exclude-dir=.github; then
          echo "❌ Found placeholder API key that should be replaced!"
          exit 1
        fi
        echo "✅ No exposed secrets found"

  test:
    runs-on: ubuntu-latest
    needs: security-check
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test app with mock credentials
      env:
        FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
        GCP_PROJECT_ID: "test-project"
      run: |
        python -c "import app; print('✅ App imports successfully')"

  deploy-gcp:
    runs-on: ubuntu-latest
    needs: [security-check, test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Deploy to App Engine
      run: |
        # Create app.yaml with secrets
        cat > app.yaml << EOF
        runtime: python39
        
        env_variables:
          FLASK_SECRET_KEY: "${{ secrets.FLASK_SECRET_KEY }}"
          GCP_PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"
          FLASK_ENV: "production"
        
        automatic_scaling:
          min_instances: 1
          max_instances: 10
        EOF
        
        gcloud app deploy --quiet
